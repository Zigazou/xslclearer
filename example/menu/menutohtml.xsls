// Menus template
stylesheet(version="1.0", xmlns:xsl="http://www.w3.org/1999/XSL/Transform") {
    // Output method is XML because if we use HTML, xsltproc will insert
    // a meta tag specifying the charset. We do not want it since it is
    // not compatible with HTML5 !
    output(method="xml", omit-xml-declaration="yes", encoding="utf-8");

    // Absolute image path relatively to the Document Root
    $imagepath = "'/path/to/img'";

    $upper = "'ABCDEFGHIJKLMNOPQRSTUVWXYZ'";
    $lower = "'abcdefghijklmnopqrstuvwxyz'";

    // ========================================================================
    // Functions
    // ========================================================================
    template("day-of-the-week") {
        param $num;

        choose() {
            when("$num = 0") { [Lundi] }
            when("$num = 1") { [Mardi] }
            when("$num = 2") { [Mercredi] }
            when("$num = 3") { [Jeudi] }
            when("$num = 4") { [Vendredi] }
            when("$num = 5") { [Samedi] }
            when("$num = 6") { [Dimanche] }
            otherwise();
        }
    }

    // ========================================================================
    // Apply template to menu tag
    // ========================================================================
    template(match="menu") {
        $firstday = "@firstday";

        for-each("day") {
            // Ignore days with no meal
            if("string-length(main) > 0") {
                [<h2>]
                    call-template("day-of-the-week") {
                        with-param $num = "@num";
                    }
                [</h2>]
                [<ul>]
                    apply-templates();
                [</ul>]
            }
        }
    }

    // ========================================================================
    // Templates for dishes
    // ========================================================================
    template(match="extra|starter|main|vegetable|dairy|dessert") {
        if("string-length(.) > 0") {
            [<li class="{local-name()}">] apply-templates(); [</li>]
        }
    }

    // Snacks are a little bit different
    template(match="snack") {
        if("string-length(.) > 0") {
            [<li class="{local-name()}">Goûter&#160;: ] apply-templates(); [</li>]
        }
    }

    // ========================================================================
    // Templates for labels/pictograms
    // ========================================================================
    template(match="label") {
        param $id = "translate(@name, $upper, $lower)";
        param $title = {
            choose() {
                when("@name = 'AB'") { [Agriculture biologique] }
                when("@name = 'HN'") { [Produit de Haute-Normandie] }
                when("@name = 'BN'") { [Produit de Basse-Normandie] }
                when("@name = 'O3'") { [Oméga 3 naturels] }
                when("@name = 'VPF'") { [Viande de porc française] }
                when("@name = 'VBF'") { [Viande bovine française] }
                when("@name = 'VF'") { [Volaille française] }
                otherwise();
            }
        };

        [<span class="picto-title" title="{$title}">
            <img class="picto-rest picto-rest-{$id}"
                 src="{$imagepath}/rest-{$id}.png"
                 title="{$title}"
            />
        </span>]
    }
}
